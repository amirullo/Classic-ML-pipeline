name: CI/CD Pipeline

on:
  push:
    branches: [master, enhancement/**]
  pull_request:
    branches: [master, enhancement/**]

jobs:
  lint-and-test:
    name: Lint, Test, Coverage on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov ruff

      - name: Run Ruff Linter (Check only)
        run: ruff check .

      - name: Run Tests with Coverage
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          pytest --cov=. --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  docker:
    name: Docker Build & Push (Only on Python 3.10)
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: ${{ github.ref == 'refs/heads/master' && contains(needs.lint-and-test.outputs.python-version, '3.10') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-ml-app:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-ml-app:latest
